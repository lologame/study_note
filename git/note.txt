从现有仓库克隆：
	git clone git [url] [本地仓库名]
	git clone git://github.com/lologame/learngit.git mygit
	
.gitignore
	*.[oa]   所有以.o,.a结束的文件
	！lib.a  lib.a除外
	/TODO    忽略项目根目录下的TODO文件
	build/   忽略build目录下的所有文件
	doc/*.a  忽略doc目录下的以.a结束的文件
	
跳过使用暂存区
	git commit -a
    使用该命令，必须保证暂存区中已经有跟踪好的文件，然后修改该文件后，不需要再add，可以直接commit
	
移除文件
	git rm 
	会从暂存区移除，连带从工作目录中移除
	git rm -f
	如果删除之前修改过并且已经放到暂存区的话，则必须要用强制删除选项-f
	git rm --cached
	仅从跟踪清单中删除

重命名
	git mv
	该命令等价于：mv xxx yyy
	              git rm xxx
				  git add yyy
				  
查看提交历史
	git log
	
	git log -p
	展开显示每次提交的内容差异
	git --stat 
	仅显示见要的增改行数统计
	
修改最厚一次提交
	git commit --amend
	eg：
		git commit -m 'initial commit'
		git add forgotten_file
		git commit --amend
	
取消已经暂存的文件
	git reset HEAD <file>
	
取消对文件的修改
	git checkout -- <file>
	
查看当前的远程仓库
	git remote
	
	git remote -v 
		显示对应的克隆地址
	
添加远程仓库
	git remote add [shortname] [url]
	
从远程仓库中获取数据
	git fetch [remote-name] [branch-name]
	
从远程仓库获取数据并合并
	git pull [remote-name] [branch-name]
	相当于：
		git fetch [remote-name] [branch-name]
		git pull [remote-name]/[branch-name]
	
推送数据到远程仓库
	git push [remote-name] [branch-name]
	
查看远程仓库的详细信息
	git remote show [remote-name]
	eg:
		$ git remote show origin
		* remote origin
		URL: git@github.com:defunkt/github.git
		Remote branch merged with 'git pull' while on branch issues       //运行git pull时将自动合并哪些分支
		issues
		Remote branch merged with 'git pull' while on branch master
		master
		New remote branches (next fetch will store in remotes/origin)   //哪些远端分支还没同步到本地
		caching
		Stale tracking branches (use 'git remote prune')   //哪些已同步到本地的远端分支在远端服务器上已经被删除
		libwalker
		walker2
		Tracked remote branches
		acl
		apiv2
		dashboard2
		issues
		master
		postgres
		Local branch pushed with 'git push'  // git push时缺省的推送分支
		master:master
		
远程仓库的重命名和删除
	git remote rename [old] [new]
	
	git remote rm [name]
	
创建新的分支
	git branch [branch-name]
	
切换到其他分支
	git checkout [branch-name]
	
新建并切换到该分支
	git checkout -b [branch-name]
	
将新分支合并到master分支
	git checkout master 
	git merge [new-branch-name]
	
删除分支
	git branch -d [branch-name]
	
列出当前所有分支的清单
	git brach
	带*的表示当前所在的分支
	
查看各个分支最后一次commit信息
	git branch -v

查看你已经和当前分支合并的分支
	git branch --merged

查看你尚未和当前分支合并的分支
	git branch -- no-merged
	
远程分支
	git用 [远程仓库名]/[分支名] 的形式表示远程分支
	
推送到远程仓库
	git push [远程仓库名] [本地分支名]：[远程分支名]
	将本地的分支推送到某个其他命名的远程分支
	
从远程仓库获取一份自己的某分支来开发
	git checkout -b [本地分支名] [远程仓库名]/[远程分支名]
	
	如果本地分支名和远程分支名相同，可写为
	git checkout --track [远程仓库名]/[远程分支名]
	
删除远程分支
	该命令会在服务器上删除某个分支
	git push [远程仓库名] ： [远程分支名]
	

	

	

	

	




	

	

	

	


		
			



	

	

	


	